// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Data.Configurations;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(ColegioDBContext))]
    [Migration("20230911191706_SegundaMigracion")]
    partial class SegundaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Boletin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Corte")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("FechaCorte")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEstudianteFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstudianteFK");

                    b.ToTable("boletin", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Colegio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DirreccionColegio")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreColegio")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("colegio", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Directivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("Dirreccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .HasColumnType("longtext");

                    b.Property<int>("IdColegioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDirectivoFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdColegioFK");

                    b.HasIndex("IdTipoDirectivoFK");

                    b.ToTable("directivo", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("Dirreccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .HasColumnType("longtext");

                    b.Property<int>("IdColegioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupoFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdColegioFK");

                    b.HasIndex("IdGrupoFK");

                    b.ToTable("estudiante", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreGrupo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("grupo", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.GrupoMateria", b =>
                {
                    b.Property<int>("IdGrupoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMateriaFK")
                        .HasColumnType("int");

                    b.HasKey("IdGrupoFK", "IdMateriaFK");

                    b.HasIndex("IdMateriaFK");

                    b.ToTable("grupoMateria", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.GrupoProfesor", b =>
                {
                    b.Property<int>("IdGrupoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesorFK")
                        .HasColumnType("int");

                    b.HasKey("IdGrupoFK", "IdProfesorFK");

                    b.HasIndex("IdProfesorFK");

                    b.ToTable("grupoProfesor", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HorasSemanales")
                        .HasColumnType("int");

                    b.Property<string>("NombreMateria")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("materia", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoMatricula")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaMatricula")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEstudianteFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstudianteFK");

                    b.ToTable("matricula", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdBoletinFK")
                        .HasColumnType("int");

                    b.Property<int>("IdEstudianteFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMateriaFK")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesorFK")
                        .HasColumnType("int");

                    b.Property<double>("NotaActitudinal")
                        .HasColumnType("double");

                    b.Property<double>("NotaAutoevaluacion")
                        .HasColumnType("double");

                    b.Property<double>("NotaExamenes")
                        .HasColumnType("double");

                    b.Property<double>("NotaTalleres")
                        .HasColumnType("double");

                    b.Property<double>("NotaTareas")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdBoletinFK");

                    b.HasIndex("IdEstudianteFK");

                    b.HasIndex("IdMateriaFK");

                    b.HasIndex("IdProfesorFK");

                    b.ToTable("nota", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("Dirreccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .HasColumnType("longtext");

                    b.Property<int>("IdColegioFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdColegioFK");

                    b.ToTable("profesor", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.ProfesorMateria", b =>
                {
                    b.Property<int>("IdMateriaFK")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesorFK")
                        .HasColumnType("int");

                    b.HasKey("IdMateriaFK", "IdProfesorFK");

                    b.HasIndex("IdProfesorFK");

                    b.ToTable("profesorMateria", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TipoDirectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HorasTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("NombreCargo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tipoDirectivo", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Boletin", b =>
                {
                    b.HasOne("Dominio.Entities.Estudiante", "Estudiante")
                        .WithMany("Boletines")
                        .HasForeignKey("IdEstudianteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("Dominio.Entities.Directivo", b =>
                {
                    b.HasOne("Dominio.Entities.Colegio", "Colegio")
                        .WithMany("Directivos")
                        .HasForeignKey("IdColegioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.TipoDirectivo", "TipoDirectivo")
                        .WithMany("Directivos")
                        .HasForeignKey("IdTipoDirectivoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colegio");

                    b.Navigation("TipoDirectivo");
                });

            modelBuilder.Entity("Dominio.Entities.Estudiante", b =>
                {
                    b.HasOne("Dominio.Entities.Colegio", "Colegio")
                        .WithMany("Estudiantes")
                        .HasForeignKey("IdColegioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Grupo", "Grupo")
                        .WithMany("Estudiantes")
                        .HasForeignKey("IdGrupoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colegio");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("Dominio.Entities.GrupoMateria", b =>
                {
                    b.HasOne("Dominio.Entities.Grupo", "Grupo")
                        .WithMany("GruposMaterias")
                        .HasForeignKey("IdGrupoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Materia", "Materia")
                        .WithMany("GruposMaterias")
                        .HasForeignKey("IdMateriaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("Dominio.Entities.GrupoProfesor", b =>
                {
                    b.HasOne("Dominio.Entities.Grupo", "Grupo")
                        .WithMany("GruposProfesores")
                        .HasForeignKey("IdGrupoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Profesor", "Profesor")
                        .WithMany("GruposProfesores")
                        .HasForeignKey("IdProfesorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Dominio.Entities.Matricula", b =>
                {
                    b.HasOne("Dominio.Entities.Estudiante", "Estudiante")
                        .WithMany("Matriculas")
                        .HasForeignKey("IdEstudianteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("Dominio.Entities.Nota", b =>
                {
                    b.HasOne("Dominio.Entities.Boletin", "Boletin")
                        .WithMany("Notas")
                        .HasForeignKey("IdBoletinFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Estudiante", "Estudiante")
                        .WithMany("Notas")
                        .HasForeignKey("IdEstudianteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Materia", "Materia")
                        .WithMany("Notas")
                        .HasForeignKey("IdMateriaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Profesor", "Profesor")
                        .WithMany("Notas")
                        .HasForeignKey("IdProfesorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boletin");

                    b.Navigation("Estudiante");

                    b.Navigation("Materia");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.HasOne("Dominio.Entities.Colegio", "Colegio")
                        .WithMany("Profesores")
                        .HasForeignKey("IdColegioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colegio");
                });

            modelBuilder.Entity("Dominio.Entities.ProfesorMateria", b =>
                {
                    b.HasOne("Dominio.Entities.Materia", "Materia")
                        .WithMany("ProfesoresMaterias")
                        .HasForeignKey("IdMateriaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Profesor", "Profesor")
                        .WithMany("ProfesoresMaterias")
                        .HasForeignKey("IdProfesorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Dominio.Entities.Boletin", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("Dominio.Entities.Colegio", b =>
                {
                    b.Navigation("Directivos");

                    b.Navigation("Estudiantes");

                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("Dominio.Entities.Estudiante", b =>
                {
                    b.Navigation("Boletines");

                    b.Navigation("Matriculas");

                    b.Navigation("Notas");
                });

            modelBuilder.Entity("Dominio.Entities.Grupo", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("GruposMaterias");

                    b.Navigation("GruposProfesores");
                });

            modelBuilder.Entity("Dominio.Entities.Materia", b =>
                {
                    b.Navigation("GruposMaterias");

                    b.Navigation("Notas");

                    b.Navigation("ProfesoresMaterias");
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.Navigation("GruposProfesores");

                    b.Navigation("Notas");

                    b.Navigation("ProfesoresMaterias");
                });

            modelBuilder.Entity("Dominio.Entities.TipoDirectivo", b =>
                {
                    b.Navigation("Directivos");
                });
#pragma warning restore 612, 618
        }
    }
}
